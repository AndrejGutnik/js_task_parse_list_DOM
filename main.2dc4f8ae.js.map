{"version":3,"sources":["scripts/main.js"],"names":["item","document","querySelector","list","querySelectorAll","listSort","currentList","innerHTML","toNumber","element","string","dataset","salary","Number","slice","replaceAll","sort","a","b","forEach","appendChild","getEmployees","map","name","trim"],"mappings":";AAAA,aAqCY,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAlCZ,IAAMA,EAAOC,SAASC,cAAc,MAE9BC,EAAOF,SAASG,iBAAtB,MAEMC,EAAW,WACTC,IAAAA,EAAkBH,EAAAA,GAExBH,EAAKO,UAAL,GAEMC,IAAAA,EAAW,SAACC,GACVC,IAAAA,EAASD,EAAQE,QAAQC,OAExBC,OAAAA,OAAOH,EAAOI,MAAM,GAAGC,WAAW,IAAK,MAGhDT,EACGU,KAAK,SAACC,EAAGC,GAAMV,OAAAA,EAASU,GAAKV,EAASS,KACtCE,QAAQ,SAAAV,GACPT,EAAKoB,YAAYX,MAIjBY,EAAe,WAGZf,OAFiBH,EAAAA,GAELmB,IAAI,SAACb,GAAD,OAAA,EAAA,CAEnBc,KAAMd,EAAQF,UAAUiB,QACrBf,EAAQE,YAKjBN,IACAgB","file":"main.2dc4f8ae.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write code here\nconst item = document.querySelector('ul');\n\nconst list = document.querySelectorAll(`li`);\n\nconst listSort = () => {\n  const currentList = [...list];\n\n  item.innerHTML = ``;\n\n  const toNumber = (element) => {\n    const string = element.dataset.salary;\n\n    return Number(string.slice(1).replaceAll(',', ''));\n  };\n\n  currentList\n    .sort((a, b) => toNumber(b) - toNumber(a))\n    .forEach(element => {\n      item.appendChild(element);\n    });\n};\n\nconst getEmployees = () => {\n  const currentList = [...list];\n\n  return currentList.map((element) => (\n    {\n      name: element.innerHTML.trim(),\n      ...element.dataset,\n    }\n  ));\n};\n\nlistSort();\ngetEmployees();\n"]}